volumes:
  local_metabase_data: { }
  local_media: { }


x-web-env: &django-env
  environment:
    - USE_DOCKER=true
    - IPYTHONDIR=/app/.ipython
    - MEDIA_URL=https://app.${ROOT_DOMAIN}/media/
    - REDIS_URL=redis://redis:6379/0
    - DATABASE_URL=psql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:6432/ethicaladserver #6432 pgbouncer https://learn.microsoft.com/en-us/azure/postgresql/flexible-server/concepts-pgbouncer#switching-your-application-to-use-pgbouncer
    - METABASE_SITE_URL=https://metabase.${ROOT_DOMAIN}
    - ADSERVER_ANALYZER_BACKEND="adserver.analyzer.backends.TextacyAnalyzerBackend"
    - COLUMNS=80
    - ETHICALADS_DJANGO_PORT=5000
    - ALLOWED_HOSTS=app.${ROOT_DOMAIN}
    - SECRET_KEY=${SECRET_KEY}
    - ADSERVER_HTTPS=True
    - DJANGO_SETTINGS_MODULE=config.settings.production
    - SENDGRID_API_KEY=${SENDGRID_API_KEY}
    - DEFAULT_FILE_STORAGE=config.storage.AzureCDNFileStorage
    - DEFAULT_FILE_STORAGE_HOSTNAME=media.${ROOT_DOMAIN}
    - AZURE_ACCOUNT_NAME=${AZURE_ACCOUNT_NAME}
    - AZURE_ACCOUNT_KEY=${AZURE_ACCOUNT_KEY}
    - AZURE_CONTAINER=${AZURE_CONTAINER}
    - SERVER_EMAIL=${SERVER_EMAIL}
    - METABASE_SECRET_KEY=${METABASE_EMBED_KEY}
    - ADSERVER_GEOIP_MIDDLEWARE=adserver.middleware.CloudflareGeoIpMiddleware
    - ADSERVER_IPADDRESS_MIDDLEWARE=adserver.middleware.CloudflareIpAddressMiddleware
    - PUBLISHER_GEO_REPORT=28
    - PUBLISHER_FIGURES=2
    - PUBLISHER_KEYWORD_REPORT=30
    - ALL_ADVERTISERS_BREAKDOWN=31
    - SENTRY_DSN=https://6fee6a733a64437afa77cfd7344fd131@o4508199963459584.ingest.de.sentry.io/4508199965032528
    - ADVERTISER_GEO_REPORT=37
    - ADVERTISER_FIGURES=3
    - ADVERTISER_PER_AD_TABLE=39
    - ADVERTISER_KEYWORD_CTR=41
    - ADVERTISER_TOPIC_PERFORMANCE=42
    - ADSERVER_ETHICALADS_BRANDING=True
    - CORS_ALLOW_ALL_ORIGINS=true
    - SITE_ID=1
    - SECURE_REFERRER_POLICY=origin
    - CSRF_TRUSTED_ORIGINS=https://app.${ROOT_DOMAIN}
    - DB_POOL_TIMEOUT=30
    - SMTP_HOST=${SMTP_HOST}
    - SMTP_PORT=${SMTP_PORT}
    - SMTP_USER=${SMTP_USER}
    - SMTP_PASSWORD=${SMTP_PASSWORD}
  networks:
    - default

services:
  django:
    image: kahfads${ENV}.azurecr.io/ethical-adserver/backend:latest
    entrypoint: ["/start"]
    command:
      - "config.asgi:application"
      - "--host=0.0.0.0"
      - "--port=5000"
      - "--lifespan=off"
    volumes:
      - local_media:/app/media
    <<: *django-env
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - logs.collector=loki
        - traefik.enable=true
        - traefik.docker.network=ethical_ad_server_default
        - traefik.http.routers.ads-backend.entrypoints=web,websecure
        - traefik.http.routers.ads-backend.rule=Host(`app.${ROOT_DOMAIN}`)
        - traefik.http.routers.ads-backend.middlewares=redirectToHttps@file
        - traefik.http.services.ads-backend.loadbalancer.server.port=5000
        - collect_logs=true
        - swarm.autoscaler=true
        - swarm.autoscaler.maximum=6
        - swarm.autoscaler.minimum=3

  redis:
    image: redis:5.0

  celery_worker:
    image: kahfads${ENV}.azurecr.io/ethical-adserver/backend:latest
    depends_on:
      - redis
    <<: *django-env
    command: /start-celeryworker

  celery_beat:
    image: kahfads${ENV}.azurecr.io/ethical-adserver/backend:latest
    depends_on:
      - redis
    <<: *django-env
    command: /start-celerybeat

  metabase:
    image: metabase/metabase
    volumes:
      - local_metabase_data:/metabase-data
    environment:
      - MB_ENCRYPTION_SECRET_KEY=${METABASE_SECRET_KEY}
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=metabase_app_db
      - MB_DB_PORT=5432
      - MB_DB_USER=${POSTGRES_USER}
      - MB_DB_PASS=${POSTGRES_PASSWORD}
      - MB_DB_HOST=${POSTGRES_HOST}
      - MB_SITE_URL=
    deploy:
      labels:
        - logs.collector=loki
        - traefik.enable=true
        - traefik.http.services.metabase.loadbalancer.server.port=3000
        - traefik.http.routers.metabase.entrypoints=web,websecure
        - traefik.http.routers.metabase.middlewares=redirectToHttps@file
        - traefik.http.routers.metabase.rule=Host(`metabase.${ROOT_DOMAIN}`)

networks:
  default:
    name: ethical_ad_server_default
    driver: overlay
    attachable: true